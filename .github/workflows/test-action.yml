name: CI/CD GitHub Actions

on: [push]

jobs:
  gtest-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: git submodule init
      - run: git submodule update

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y qt5-qmake qtbase5-dev qtchooser qtbase5-dev-tools
          pip install cpp-coveralls

      - name: Configure with coverage
        run: |
          qmake CONFIG+=coverage
          make clean
          make

      - name: Run tests
        run: ./tests/tests

      - name: Generate coverage report
        run: |
          lcov --capture --directory . --output-file coverage.info
          lcov --remove coverage.info '*/tests/*' '*/external/*' --output-file coverage.info

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.info

  sonarcloud-check:
    needs: gtest-tests
    runs-on: ubuntu-latest
    env:
      SONAR_SCANNER_VERSION: 4.6.1.2450
      SONAR_SERVER_URL: "https://sonarcloud.io"
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - run: |
          git submodule init
          git submodule update
          sudo apt-get update -y
          sudo apt-get install -y qt5-qmake qtbase5-dev qtchooser qtbase5-dev-tools

      - name: Set up Python 3.8 for gcovr
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install gcovr 5.0
        run: pip install gcovr==5.0

      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v2

      - name: Run build-wrapper
        run: build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} make

      - name: Run tests to generate coverage statistics
        run: ./tests/tests

      - name: Collect coverage into one XML report
        run: gcovr --sonarqube > coverage.xml

      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" \
            --define sonar.coverageReportPaths=coverage.xml
